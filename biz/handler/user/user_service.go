// Code generated by hertz generator.

package user

import (
	"context"
	"github.com/hertz-contrib/sessions"
	"strconv"
	"userdemo/biz/dal"

	"github.com/cloudwego/hertz/pkg/app"
	user "userdemo/biz/model/user"
)

// Register .
// @router /user/register/ [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.RegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(user.RegisterResponse)

	username := c.PostForm("username")
	password := c.PostForm("password")

	if dal.CheckUsername(username) {
		dal.CreateUser(username, password)

		resp.BaseResp = &user.BaseResp{
			StatusCode: 0,
			StatusMsg:  "register success",
		}

		c.JSON(200, resp.BaseResp)
		return
	}

	resp.BaseResp = &user.BaseResp{
		StatusCode: 1,
		StatusMsg:  "register failed",
	}
	c.JSON(400, resp.BaseResp)
}

// Login .
// @router /user/login/ [POST]
func Login(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.LoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(user.LoginResponse)

	username := c.PostForm("username")
	password := c.PostForm("password")

	if dal.CheckPassword(username, password) {
		session := sessions.Default(c)
		var count int
		cnt := session.Get(username)
		if cnt == nil {
			count = 0
			dal.SetFrequency(username, count)
		} else {
			count = cnt.(int)
			count++
			dal.SetFrequency(username, count)
		}
		session.Set(username, count)
		_ = session.Save()

		resp.BaseResp = &user.BaseResp{
			StatusCode: 0,
			StatusMsg:  "login success",
		}
		c.JSON(200, resp.BaseResp)
		return
	}

	resp.BaseResp = &user.BaseResp{
		StatusCode: 1,
		StatusMsg:  "login failed",
	}
	c.JSON(400, resp.BaseResp)
}

// Info .
// @router /user/:username [GET]
func Info(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.InfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(user.InfoResponse)

	username := c.Param("username")

	frequency := dal.GetFrequency(username)

	resp.BaseResp = &user.BaseResp{
		StatusCode: 0,
		StatusMsg:  "info success",
		Data:       strconv.Itoa(frequency),
	}

	c.JSON(200, resp.BaseResp)
}
